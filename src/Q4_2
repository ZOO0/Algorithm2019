// ** 이진검색트리 클래스
public class BinarySearchTree<K,V> {

  private Node<K,V> root; // 루트
  private Comparator<? super K> comparator = null;  // 비교자(키 값의 대소 관계를 비교)
  
  // 생성자
  public BinarySearchTree(){
    root = null;
  }
  
  // 생성자
  public BinarySearchTree(Comparator<? super K> c){
    this();
    comparator = c;
  }
  
  // 키값 비교
  private int compare(K key1, K key2){
    return (comparator == null) ? ((Comparable<K>)key1).compareTo(key2) : comparator.compare(key1, key2);
  }
  
  // ** 노드 클래스
  static class Node<K,V> {
    private K key;          // 키 값
    private V data;         // 데이터 
    private Node<K,V> left; // 왼쪽 자식 노드 포인터
    private Node<K,V> right;// 오른쪽 자식 노드 포인터
    
    // 생성자
    Node(K key, V data, Node<K,V> left, Node<K,V> right){
      this.key = key;
      this.data = data;
      this.left = left;
      this.right = right;
    }
    
    // 키 값을 반환
    K getKey(){
      return key;
    }
    
    // 데이터를 반환
    V getValue(){
      return data;
    }
    
    // 데이터를 출력
    void print(){
      System.out.println(data);
    }
  }
  
}
